{"version":3,"sources":["actions.js","api/api.js","constants.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","components/CounterButton.js","components/Header.js","containers/App.js","reducers.js","reportWebVitals.js","index.js"],"names":["requestRobots","dispatch","link","type","fetch","then","response","json","data","payload","catch","error","Card","_ref","name","email","id","react_default","a","createElement","className","alt","width","height","src","concat","CardList","robots","console","log","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","aria-label","placeholder","onChange","Scroll","props","style","overflow","border","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","info","setState","Component","CounterButton","updateCount","count","nextProps","nextState","color","onClick","PureComponent","Header","components_CounterButton","App","onRequestRobots","_this$props","searchField","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","components_Header","components_SearchBox","components_Scroll","ErrorBoundry","components_CardList","connect","searchRobots","event","target","value","initialStateSearch","initialStateRobots","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducers","createLogger","combineReducers","arguments","length","undefined","action","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.0ecffb0a.chunk.js","sourcesContent":["import { apiCall } from './api/api'\r\nimport {\r\n  CHANGE_SEARCHFIELD,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n  REQUEST_ROBOTS_FAILED\r\n } from './constants'\r\n\r\n\r\nexport const setSearchField = (text) => ({ type: CHANGE_SEARCHFIELD, payload: text })\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n  dispatch({ type: REQUEST_ROBOTS_PENDING })\r\n  apiCall('https://jsonplaceholder.typicode.com/users')\r\n    .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\r\n    .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\r\n}","export const apiCall = (link) =>\r\n  fetch(link).then(response => response.json())","export const CHANGE_SEARCHFIELD = 'CHANGE_SEARCHFIELD';\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n  return (\r\n    <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\r\n      <img alt='robots' width=\"200\" height=\"200\" src={`https://robohash.org/${id}?size=200x200`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n  console.log('CardList')\r\n  return (\r\n    <div>\r\n      {\r\n        robots.map((user, i) => {\r\n          return (\r\n            <Card\r\n              key={i}\r\n              id={robots[i].id}\r\n              name={robots[i].name}\r\n              email={robots[i].email}\r\n              />\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n  console.log('SearchBox')\r\n  return (\r\n    <div className='pa2'>\r\n      <input \r\n        aria-label='Search Robot'\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search'\r\n        placeholder='search robots'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react'\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = { hasError: false }\r\n  }\r\n\r\n  componentDidCatch (error, info) {\r\n    this.setState({ hasError: true })\r\n  }\r\n\r\n  render () {\r\n    if (this.state.hasError) {\r\n      return <h1>Something went wrong.</h1>\r\n    }\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary","import React, { PureComponent } from 'react';\r\n\r\nclass CounterButton extends PureComponent {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      count: 0\r\n    }\r\n  }\r\n\r\n  //below is not needed if we extend PureComponent\r\n  //like we have above\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (this.state.count !== nextState.count) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  updateCount = () => {\r\n    this.setState(state => {\r\n      return {count: state.count + 1}\r\n    })\r\n  }\r\n\r\n  render() {\r\n    console.log('CounterButton')\r\n    return (\r\n      <button color={this.props.color} onClick={this.updateCount}>\r\n        Count: {this.state.count}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CounterButton;","import React, { Component } from 'react';\r\nimport CounterButton from './CounterButton';\r\n\r\nclass Header extends Component {\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   return false;\r\n  // }\r\n\r\n  render() {\r\n    console.log('Header')\r\n    return (\r\n      <div>\r\n        <h1 className='f1'>RoboFriends</h1>\r\n        <CounterButton color={'red'} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setSearchField, requestRobots } from '../actions';\r\n\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport Header from '../components/Header';\r\n\r\nimport './App.css';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    searchField: state.searchRobots.searchField,\r\n    robots: state.requestRobots.robots,\r\n    isPending: state.requestRobots.isPending\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n    onRequestRobots: () => dispatch(requestRobots())\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onRequestRobots();\r\n  }\r\n\r\n  render() {\r\n    const { robots, searchField, onSearchChange, isPending } = this.props;\r\n    const filteredRobots = robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    })\r\n    return (\r\n      <div className='tc'>\r\n        <Header />\r\n        <SearchBox searchChange={onSearchChange}/>\r\n        <Scroll>\r\n          { isPending ? <h1>Loading</h1> :\r\n            <ErrorBoundry>\r\n              <CardList robots={filteredRobots} />\r\n            </ErrorBoundry>\r\n          }\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","import {\r\n  CHANGE_SEARCHFIELD,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n  REQUEST_ROBOTS_FAILED\r\n } from './constants';\r\n\r\nconst initialStateSearch = {\r\n  searchField: ''\r\n}\r\n\r\nexport const searchRobots = (state=initialStateSearch, action={}) => {\r\n  switch (action.type) {\r\n    case CHANGE_SEARCHFIELD:\r\n      return Object.assign({}, state, {searchField: action.payload})\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst initialStateRobots = {\r\n  robots: [],\r\n  isPending: true\r\n}\r\n\r\nexport const requestRobots = (state=initialStateRobots, action={}) => {\r\n  switch (action.type) {\r\n    case REQUEST_ROBOTS_PENDING:\r\n      return Object.assign({}, state, {isPending: true})\r\n    case REQUEST_ROBOTS_SUCCESS:\r\n      return Object.assign({}, state, {robots: action.payload, isPending: false})\r\n    case REQUEST_ROBOTS_FAILED:\r\n      return Object.assign({}, state, {error: action.payload})\r\n    default:\r\n      return state\r\n  }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport 'tachyons';\r\n\r\nimport App from './containers/App';\r\nimport { requestRobots, searchRobots } from './reducers'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport './index.css'; \r\n\r\nconst logger = createLogger()\r\n\r\nconst rootReducers = combineReducers({requestRobots, searchRobots})\r\n\r\nconst store = createStore(rootReducers, applyMiddleware(thunkMiddleware))\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App/>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}